name: Build on Push

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    # ❶ Environment variables for the whole job
    #    • APP_BASE_URL is public, so we hard-code it here for now.
    env:
      APP_BASE_URL: https://notes.ruslanlomaka.org
      SPRING_EMAIL_USERNAME: ${{ secrets.SPRING_EMAIL_USERNAME }}
      SPRING_EMAIL_PASSWORD: ${{ secrets.SPRING_EMAIL_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # 🔻 Write .env for Spring Boot & Docker from your secrets
      - name: Write .env for Spring Boot & Docker
        run: |
          cat > .env <<'EOF'
          # public URL
          APP_BASE_URL=${{ env.APP_BASE_URL }}

          # JWT
          NOTES_JWT_SECRET=${{ secrets.NOTES_JWT_SECRET }}

          # Postgres
          SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/notesdb
          SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }}

          # Mail
          SPRING_EMAIL_USERNAME=${{ env.SPRING_EMAIL_USERNAME }}
          SPRING_EMAIL_PASSWORD=${{ env.SPRING_EMAIL_PASSWORD }}
          EOF

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Install Docker Compose CLI v2
        run: |
          sudo mkdir -p /usr/local/lib/docker/cli-plugins
          sudo curl -SL \
            https://github.com/docker/compose/releases/download/v2.27.0/docker-compose-linux-x86_64 \
            -o /usr/local/lib/docker/cli-plugins/docker-compose
          sudo chmod +x /usr/local/lib/docker/cli-plugins/docker-compose

      - name: Build with Docker Compose
        run: docker compose build
